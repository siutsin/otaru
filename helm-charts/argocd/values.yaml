namespace: argocd

argo-cd:
  global:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
                - key: volume
                  operator: NotIn
                  values:
                    - "true"
  configs:
    cm:
      url: https://argocd.internal.siutsin.com/argocd/
    params:
      server.insecure: true
      server.basehref: /argocd/
      server.rootpath: /argocd
    cmp:
      create: true
      plugins:
        jsonnet-with-secret:
          discover:
            fileName: "manifest.jsonnet"
          generate:
            command: [ "jsonnet" ]
            args: [ "--yaml-stream", "manifest.jsonnet", "--ext-str", "AWS_ACCOUNT_ID" ]
  dex:
    enabled: false
  notifications:
    enabled: false
  controller:
    replicas: 3
  server:
    autoscaling:
      enabled: true
      minReplicas: 2
  repoServer:
    autoscaling:
      enabled: true
      minReplicas: 3
    containerSecurityContext:
      runAsUser: 999
    rbac:
      - apiGroups: [ "" ]
        resources: [ "secrets" ]
        verbs: [ "get" ]
        resourceNames: [ "argocd-jsonnet-secret" ]
    initContainers:
      - name: wait-for-secret
        image: alpine/kubectl:1.34.1@sha256:d702c70b73481b4e11603402508fa8f602edbeb342ecdf472fd499bdeb38befe
        command:
          - /bin/sh
          - -c
          - |
            echo "Waiting for secret argocd-jsonnet-secret..."
            until kubectl get secret argocd-jsonnet-secret -n argocd; do
              echo "Secret not found, retrying in 5 seconds..."
              sleep 5
            done
            echo "Secret argocd-jsonnet-secret found!"
        securityContext:
          runAsUser: 1000
    extraContainers:
      - name: jsonnet-with-secret
        env:
          - name: AWS_ACCOUNT_ID
            valueFrom:
              secretKeyRef:
                name: argocd-jsonnet-secret
                key: AWS_ACCOUNT_ID
        command:
          - /var/run/argocd/argocd-cmp-server
        securityContext:
          runAsNonRoot: true
          runAsUser: 999
        image: ghcr.io/siutsin/images/go-jsonnet:202510120038@sha256:8c7f8ae59fdc0bae8a5bc12aec06c687c3c6f4a0410eeded05cc87b7fcc0d076
        volumeMounts:
          - mountPath: /var/run/argocd
            name: var-files
          - mountPath: /home/argocd/cmp-server/plugins
            name: plugins
          - mountPath: /home/argocd/cmp-server/config/plugin.yaml
            subPath: jsonnet-with-secret.yaml
            name: argocd-cmp-cm
          - mountPath: /tmp
            name: cmp-tmp
    volumes:
      - name: argocd-cmp-cm
        configMap:
          name: argocd-cmp-cm
      - name: cmp-tmp
        emptyDir: { }
