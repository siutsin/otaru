apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  annotations:
    reloader.stakater.com/search: "true"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.name }}
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: {{ .Values.deployment.ports.http | quote }}
        prometheus.io/scrape: "true"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - {{ .Values.name }}
                topologyKey: kubernetes.io/hostname
      securityContext:
        fsGroup: 100
      containers:
        - name: {{ .Values.name }}
          securityContext:
            runAsNonRoot: true
            runAsUser: 100
          image: {{ .Values.deployment.image.repository }}:{{ .Values.deployment.image.tag }}
          ports:
            - name: dns-tcp
              containerPort: 53
              protocol: TCP
            - name: dns-udp
              containerPort: 53
              protocol: UDP
            - name: http
              containerPort: {{ .Values.deployment.ports.http }}
              protocol: TCP
          env:
            - name: TZ
              value: {{ .Values.app.timezone }}
          livenessProbe:
            exec: {{ toYaml .Values.deployment.probeExec | nindent 14 }}
          readinessProbe:
            exec: {{ toYaml .Values.deployment.probeExec | nindent 14 }}
          startupProbe:
            exec: {{ toYaml .Values.deployment.probeExec | nindent 14 }}
            failureThreshold: 120
            periodSeconds: 5
          volumeMounts:
            - name: config
              mountPath: /app/config.yml
              subPath: config.yml
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              memory: 300Mi
      volumes:
        - name: config
          configMap:
            name: {{ .Values.name }}-configmap
