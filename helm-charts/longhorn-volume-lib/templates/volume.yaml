{{- range $key, $value := .Values.volumes }}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ $key }}-pv
  annotations:
    longhorn.io/volume-scheduling-error: ''
    pv.kubernetes.io/provisioned-by: driver.longhorn.io
    volume.kubernetes.io/provisioner-deletion-secret-name: longhorn-crypto
    volume.kubernetes.io/provisioner-deletion-secret-namespace: longhorn-system
  labels:
    binding-key: {{ $key }}
    app.kubernetes.io/name: {{ $key }}
    {{- if or $value.enableBackup (not (hasKey $value "enableBackup")) }}
    recurring-job-group.longhorn.io/backup: enabled
    {{- end }}
    {{- if or $value.enableTrim (not (hasKey $value "enableTrim")) }}
    recurring-job-group.longhorn.io/trim: enabled
    {{- end }}
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: {{ $value.size }}
  csi:
    driver: driver.longhorn.io
    fsType: ext4
    volumeAttributes:
      numberOfReplicas: "1"
      dataLocality: disabled
      replicaAutoBalance: best-effort
      encrypted: "true"
    nodeStageSecretRef:
      name: longhorn-crypto
      namespace: longhorn-system
    nodePublishSecretRef:
      name: longhorn-crypto
      namespace: longhorn-system
    volumeHandle: {{ $key }}-vol
  persistentVolumeReclaimPolicy: Delete
  storageClassName: longhorn-crypto-global
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ $key }}-pvc
  namespace: {{ $.Values.namespace }}
  labels:
    app.kubernetes.io/name: {{ $key }}
    {{- if or $value.enableBackup (not (hasKey $value "enableBackup")) }}
    recurring-job-group.longhorn.io/backup: enabled
    {{- end }}
    {{- if or $value.enableTrim (not (hasKey $value "enableTrim")) }}
    recurring-job-group.longhorn.io/trim: enabled
    {{- end }}
spec:
  storageClassName: longhorn-crypto-global
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ $value.size }}
  selector:
    matchLabels:
      binding-key: {{ $key }}
---
apiVersion: longhorn.io/v1beta2
kind: Volume
metadata:
  name: {{ $key }}-vol
  namespace: longhorn-system
  labels:
    app.kubernetes.io/name: {{ $key }}
    {{- if or $value.enableBackup (not (hasKey $value "enableBackup")) }}
    recurring-job-group.longhorn.io/backup: enabled
    {{- end }}
    {{- if or $value.enableTrim (not (hasKey $value "enableTrim")) }}
    recurring-job-group.longhorn.io/trim: enabled
    {{- end }}
spec:
  accessMode: rwo
  encrypted: true
  frontend: blockdev
  size: {{ $value.sizeBytes | quote }}
  numberOfReplicas: 1
  fromBackup: {{ $value.fromBackup | quote }}
{{- end }}
