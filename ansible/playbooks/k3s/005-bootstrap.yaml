---
- hosts: localhost
  connection: local

  tasks:

  # Set local-path not to be the default storage class

  - name: Create local-path storage class
    shell: "kubectl annotate storageclass local-path storageclass.kubernetes.io/is-default-class=false --overwrite"

  # Create namespaces

  - name: Create external-secrets namespace
    shell: "kubectl create namespace external-secrets || true"

  - name: Create onepassword namespace
    shell: "kubectl create namespace onepassword || true"

  # 1Password Connect

  - name: Update dependency
    shell: "helm dep update ../../../helm-charts/onepassword-connect"

  - name: Create Secret for `onepassword-connect`
    shell: "kubectl create secret generic onepassword-connect-token -n external-secrets --from-literal=token=\"$(tr -d '

      ' < ../../../token)\" 2>/dev/null || true"

  - name: Initialise 1Password Secret Operator
    shell: |
      helm template onepassword-connect ../../../helm-charts/onepassword-connect -n onepassword \
        --set-file connect.connect.credentials=../../../1password-credentials.json | kubectl create -f - 2>/dev/null || true

  # Argo CD

  - name: Update dependency
    shell: "helm dep update ../../../helm-charts/argocd"

  - name: Create namespace
    shell: "kubectl create namespace argocd || true"

  - name: Create argocd-jsonnet-secret
    shell: "kubectl create secret generic argocd-jsonnet-secret -n argocd --from-literal=AWS_ACCOUNT_ID=\"$(tr -d '\n' < ../../../argocd-secret)\" 2>/dev/null || true"

  - name: Initialise Argo CD
    shell: "helm template argocd ../../../helm-charts/argocd -n argocd | kubectl create -f - 2>/dev/null || true"

  # Wait for Argo CD and 1Password Connect to be ready

  - name: Wait for 1Password Connect to be ready
    shell: |
      kubectl rollout status deploy/onepassword-connect -n onepassword --timeout=15m
      kubectl delete pod onepassword-connect-health-check -n onepassword

  - name: Wait for Argo CD to be ready
    shell: |
      kubectl rollout status deploy/argocd-server -n argocd --timeout=15m
      kubectl rollout status deploy/argocd-applicationset-controller -n argocd --timeout=15m
      kubectl rollout status deploy/argocd-redis -n argocd --timeout=15m
      kubectl rollout status deploy/argocd-repo-server -n argocd --timeout=15m
      kubectl rollout status statefulset/argocd-application-controller -n argocd --timeout=15m

  # External Secrets Operator

  - name: Update dependency
    shell: "helm dep update ../../../helm-charts/external-secrets"

  - name: Initialise External Secrets Operator
    shell: "helm template external-secrets ../../../helm-charts/external-secrets -n external-secrets | kubectl create -f - 2>/dev/null || true"

  - name: Wait for External Secrets to be ready
    shell: |
      kubectl rollout status deploy/external-secrets -n external-secrets --timeout=15m
      kubectl rollout status deploy/external-secrets-webhook -n external-secrets --timeout=15m
      kubectl rollout status deploy/external-secrets-cert-controller -n external-secrets --timeout=15m

  # Bootstrap

  - name: Bootstrap Cluster
    shell: "helm template ../../../helm-charts/argocd-bootstrap -n argocd | kubectl create -f - 2>/dev/null || true"
