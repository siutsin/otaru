---
- hosts: raspberrypi
  become: true
  gather_facts: true
  vars:
    LB_API_SERVER_IP: 192.168.1.50
    ETCD_IP: 192.168.1.52

  tasks:
    - name: Get node token from master
      shell: sudo cat /var/lib/rancher/k3s/server/node-token
      register: master_token
      run_once: true
      delegate_to: raspberrypi-00.local
      when: "'master' in group_names and inventory_hostname == groups['master'][0]"
      no_log: true

    - name: Install k3s on master nodes with LB_API_SERVER_IP
      shell: |
        curl -sfL https://get.k3s.io | sh -s - \
          --token {{ master_token.stdout }} \
          --datastore-endpoint=https://{{ ETCD_IP }}:2379 \
          --datastore-cafile=/home/pi/certs/etcd/ca.pem \
          --datastore-keyfile=/home/pi/certs/etcd/client-key.pem \
          --datastore-certfile=/home/pi/certs/etcd/client.pem \
          --disable metrics-server \
          --disable servicelb \
          --disable traefik \
          --disable-kube-proxy \
          --disable-network-policy \
          --flannel-backend=none \
          --secrets-encryption \
          --tls-san {{ LB_API_SERVER_IP }} \
          --tls-san $(hostname -I | awk '{print $1}') \
          --write-kubeconfig-mode=644
      when: "'master' in group_names"

    - name: Install k3s on workers
      shell: |
        curl -sfL https://get.k3s.io | \
          K3S_TOKEN={{ hostvars[groups['master'][0]]['master_token']['stdout'] }} \
          K3S_URL=https://{{ LB_API_SERVER_IP }}:443 \
          sh -
      when: "'worker' in group_names"

    - name: Get FIRST_MASTER_IP
      set_fact:
        FIRST_MASTER_IP: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
      when: "'master' in group_names and inventory_hostname == groups['master'][0]"

    - name: Replace first master IP with LB_API_SERVER_IP in local kube config
      local_action:
        module: replace
        path: "~/.kube/config"
        regexp: 'server: https://{{ FIRST_MASTER_IP }}:6443'
        replace: "server: https://{{ LB_API_SERVER_IP }}:443"
      become: yes
      become_user: simon
      run_once: true
      when: "'master' in group_names and inventory_hostname == groups['master'][0]"
