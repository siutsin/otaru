---
- hosts: localhost
  connection: local

  tasks:

    # Namespaces

    - name: Create Namespaces
      shell: "helm template ../../../helm-charts/namespaces | kubectl create -f - 2>/dev/null || true"

    # Istio

    - name: Update dependency
      shell: "helm dep update ../../../helm-charts/istio-base && helm dep update ../../../helm-charts/istiod && helm dep update ../../../helm-charts/istio-ingress"

    - name: Apply istio-base Helm template
      shell: "helm template ../../../helm-charts/istio-base -n istio-system | kubectl create -f - 2>/dev/null || true"

    - name: Apply istiod Helm template
      shell: "helm template ../../../helm-charts/istiod -n istio-system | kubectl create -f - 2>/dev/null || true"

    - name: Wait for istiod to rollout
      shell: "kubectl rollout status deploy/istiod -n istio-system --timeout=15m"

    # Argo CD

    - name: Update dependency
      shell: "helm dep update ../../../helm-charts/argocd"

    - name: Initialise Argo CD
      shell: "helm template argocd ../../../helm-charts/argocd -n argocd | kubectl create -f - 2>/dev/null || true"

    - name: Wait for argocd-server to rollout
      shell: "kubectl rollout status deploy/argocd-server -n argocd --timeout=15m"

    - name: Wait for argocd-applicationset-controller to rollout
      shell: "kubectl rollout status deploy/argocd-applicationset-controller -n argocd --timeout=15m"

    - name: Wait for argocd-redis to rollout
      shell: "kubectl rollout status deploy/argocd-redis -n argocd --timeout=15m"

    - name: Wait for argocd-repo-server to rollout
      shell: "kubectl rollout status deploy/argocd-repo-server -n argocd --timeout=15m"

    - name: Wait for argocd-application-controller to rollout
      shell: "kubectl rollout status statefulset/argocd-application-controller -n argocd --timeout=15m"

    # 1Password Connect

    - name: Update dependency
      shell: "helm dep update ../../../helm-charts/onepassword-connect"

    - name: Create Secret for `onepassword-connect`
      shell: "kubectl create secret generic onepassword-connect-token -n external-secrets --from-literal=token=\"$(tr -d '\n' < ../../../token)\" 2>/dev/null || true"

    - name: Initialise 1Password Secret Operator
      shell: "helm template onepassword-connect ../../../helm-charts/onepassword-connect -n onepassword --set-file connect.connect.credentials=../../../1password-credentials.json | kubectl create -f - 2>/dev/null || true"

    - name: Wait for onepassword-connect to rollout
      shell: "kubectl rollout status deploy/onepassword-connect -n onepassword --timeout=15m"

    - name: Clean up onepassword-connect health check pod
      shell: "kubectl delete pod onepassword-connect-health-check -n onepassword"

    # External Secrets Operator

    - name: Update dependency
      shell: "helm dep update ../../../helm-charts/external-secrets"

    - name: Initialise External Secrets Operator
      shell: "helm template external-secrets ../../../helm-charts/external-secrets -n external-secrets | kubectl create -f - 2>/dev/null || true"

    - name: Wait for external-secrets to rollout
      shell: "kubectl rollout status deploy/external-secrets -n external-secrets --timeout=15m"

    - name: Wait for external-secrets-webhook to rollout
      shell: "kubectl rollout status deploy/external-secrets-webhook -n external-secrets --timeout=15m"

    - name: Wait for external-secrets-cert-controller to rollout
      shell: "kubectl rollout status deploy/external-secrets-cert-controller -n external-secrets --timeout=15m"

    # Bootstrap

    - name: Bootstrap Cluster
      shell: "helm template ../../../helm-charts/argocd-bootstrap -n argocd | kubectl create -f - 2>/dev/null || true"
