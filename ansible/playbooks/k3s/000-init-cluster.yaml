---
- hosts: raspberrypi
  become: true
  vars:
    LB_API_SERVER_IP: 192.168.1.50
    ETCD_IP: 192.168.1.52
    CERT_SRC_DIR: ../../../certs
    CERT_DEST_DIR: /home/pi/certs/etcd

  tasks:
    - name: Ensure etcd certs directory exists on master nodes
      file:
        path: "{{ CERT_DEST_DIR }}"
        state: directory
        owner: pi
        group: pi
        mode: '0755'
      when: "'master' in group_names"

    - name: Copy etcd certificates to all the master nodes
      copy:
        src: "{{ CERT_SRC_DIR }}/"
        dest: "{{ CERT_DEST_DIR }}/"
        owner: pi
        group: pi
        mode: '0600'
      when: "'master' in group_names"

    - name: Install k3s on the first master node
      # Enable anonymous authentication
      # https://stackoverflow.com/questions/74603633/k3s-allow-unauthenticated-access-to-oidc-endpoints
      # All API server arguments need to be passed using the `kube-apiserver-arg` flag
      # https://docs.k3s.io/cli/server#customized-flags-for-kubernetes-processes
      # https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/
      # https://github.com/aws/amazon-eks-pod-identity-webhook/blob/master/SELF_HOSTED_SETUP.md
      shell: |
        curl -sfL https://get.k3s.io | sh -s - \
          --datastore-endpoint=https://{{ ETCD_IP }}:2379 \
          --datastore-cafile=/home/pi/certs/etcd/ca.pem \
          --datastore-keyfile=/home/pi/certs/etcd/client-key.pem \
          --datastore-certfile=/home/pi/certs/etcd/client.pem \
          --disable metrics-server \
          --disable servicelb \
          --disable traefik \
          --disable-kube-proxy \
          --disable-network-policy \
          --flannel-backend=none \
          --secrets-encryption \
          --tls-san {{ LB_API_SERVER_IP }} \
          --tls-san $(hostname -I | awk '{print $1}') \
          --write-kubeconfig-mode=644 \
          --kube-apiserver-arg \
          --anonymous-auth=true \
          --kube-apiserver-arg \
          --service-account-issuer=https://oidc.siutsin.com \
          --kube-apiserver-arg \
          --api-audiences=oidc.siutsin.com \
          --kube-apiserver-arg \
          --service-account-jwks-uri=https://oidc.siutsin.com/openid/v1/jwks
      when: "'master' in group_names and inventory_hostname == groups['master'][0]"
      register: first_master_setup

    - name: Set FIRST_MASTER_IP variable for later use
      set_fact:
        FIRST_MASTER_IP: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
      when: "'master' in group_names and inventory_hostname == groups['master'][0]"

    - name: Copy k3s.yaml to local machine
      fetch:
        src: /etc/rancher/k3s/k3s.yaml
        dest: ~/.kube/config
        flat: yes
      delegate_to: raspberrypi-00.local
      run_once: true
      when: "'master' in group_names and inventory_hostname == groups['master'][0]"

    - name: Replace 'default' with 'raspberrypi' in local kube config
      local_action:
        module: replace
        path: "~/.kube/config"
        regexp: 'default'
        replace: 'raspberrypi'
      become: yes
      become_user: simon
      run_once: true
      when: "'master' in group_names and inventory_hostname == groups['master'][0]"

    - name: Replace '127.0.0.1' with first master IP in local kube config
      local_action:
        module: replace
        path: "~/.kube/config"
        regexp: '127.0.0.1'
        replace: "{{ hostvars[groups['master'][0]]['FIRST_MASTER_IP'] }}"
      become: yes
      become_user: simon
      run_once: true
      when: "'master' in group_names and inventory_hostname == groups['master'][0]"
