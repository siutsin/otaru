package_update: true
package_upgrade: true

packages:
  - net-tools

write_files:
  - path: /etc/systemd/system/etcd.service
    permissions: '0644'
    content: |
      [Unit]
      Description=etcd key-value store
      Documentation=https://github.com/etcd-io/etcd
      After=network.target

      [Service]
      ExecStart=/usr/local/bin/etcd --advertise-client-urls https://192.168.1.52:2379 --listen-client-urls https://192.168.1.52:2379,https://127.0.0.1:2379 --cert-file=/certs/server.pem --key-file=/certs/server-key.pem --client-cert-auth --trusted-ca-file=/certs/ca.pem
      Restart=always
      RestartSec=5
      LimitNOFILE=40000

      [Install]
      WantedBy=multi-user.target
  - path: /etc/cfssl/ca-config.json
    permissions: '0644'
    content: |
      {
        "signing": {
          "default": {
            "usages": [
              "signing",
              "key encipherment",
              "server auth",
              "client auth"
            ],
            "expiry": "876000h"
          }
        }
      }
  - path: /etc/cfssl/ca-csr.json
    permissions: '0644'
    content: |
      {
        "CN": "Autogenerated CA",
        "key": {
          "algo": "rsa",
          "size": 2048
        },
        "names": [
          {
            "O": "Honest Achmed's Used Certificates",
            "OU": "Hastily-Generated Values Divison",
            "L": "San Francisco",
            "ST": "California",
            "C": "US"
          }
        ]
      }
  - path: /etc/cfssl/server-csr.json
    permissions: '0644'
    content: |
      {
        "CN": "etcd-cluster",
        "hosts": [
          "localhost",
          "127.0.0.1",
          "192.168.1.52"
        ],
        "key": {
          "algo": "ecdsa",
          "size": 256
        },
        "names": [
          {
            "C": "US",
            "L": "CA",
            "ST": "San Francisco"
          }
        ]
      }
  - path: /etc/cfssl/client-csr.json
    permissions: '0644'
    content: |
      {
        "CN": "client",
        "hosts": [""],
        "key": {
          "algo": "ecdsa",
          "size": 256
        },
        "names": [
          {
            "C": "US",
            "L": "CA",
            "ST": "San Francisco"
          }
        ]
      }

runcmd:
  - |
    # Set static IP
    sed -i '/extra0/,/dhcp4: true/s/dhcp4: true/dhcp4: false/' /etc/netplan/50-cloud-init.yaml
    sed -i '/extra0/a \ \ \ \ \ \ addresses:\n\ \ \ \ \ \ \ \ - 192.168.1.52/24' /etc/netplan/50-cloud-init.yaml
    sed -i '/dhcp4-overrides:/,/route-metric: 200/d' /etc/netplan/50-cloud-init.yaml
    netplan apply

  - |
    # wait until enp0s2 interface is ready
    while true; do
        ip_address=$(ifconfig enp0s2 | grep 'inet ' | awk '{print $2}')
        [ -n "$ip_address" ] && break
        sleep 2
    done

  - |
    # Generate self-signed TLS certificate.
    # Reference:
    # - https://github.com/etcd-io/etcd/tree/main/hack/tls-setup
    # - https://medium.com/nirman-tech-blog/setting-up-etcd-cluster-with-tls-authentication-enabled-49c44e4151bb
    
    CFSSL_VERSION=$(curl -s https://api.github.com/repos/cloudflare/cfssl/releases/latest | grep tag_name | cut -d '"' -f 4 | cut -c 2-)
    wget -O /usr/local/bin/cfssl https://github.com/cloudflare/cfssl/releases/download/v${CFSSL_VERSION}/cfssl_${CFSSL_VERSION}_linux_arm64
    wget -O /usr/local/bin/cfssljson https://github.com/cloudflare/cfssl/releases/download/v${CFSSL_VERSION}/cfssljson_${CFSSL_VERSION}_linux_arm64
    chmod +x /usr/local/bin/cfssl /usr/local/bin/cfssljson
    
    mkdir /certs
    cfssl gencert -initca /etc/cfssl/ca-csr.json | cfssljson -bare /certs/ca
    cfssl gencert -ca=/certs/ca.pem -ca-key=/certs/ca-key.pem -config=/etc/cfssl/ca-config.json /etc/cfssl/server-csr.json | cfssljson -bare /certs/server
    cfssl gencert -ca=/certs/ca.pem -ca-key=/certs/ca-key.pem -config=/etc/cfssl/ca-config.json /etc/cfssl/client-csr.json | cfssljson -bare /certs/client
    
    cp /certs/client-key.pem /home/ubuntu/
    cp /certs/client.pem /home/ubuntu/
    cp /certs/ca.pem /home/ubuntu/
    chown ubuntu:ubuntu /home/ubuntu/client-key.pem /home/ubuntu/client.pem /home/ubuntu/ca.pem

  - |
    # Launch etcd
    ETCD_VERSION=$(curl -s https://api.github.com/repos/etcd-io/etcd/releases/latest | grep tag_name | cut -d '"' -f 4)
    curl -L https://github.com/etcd-io/etcd/releases/download/${ETCD_VERSION}/etcd-${ETCD_VERSION}-linux-arm64.tar.gz -o /tmp/etcd.tar.gz
    tar -xvf /tmp/etcd.tar.gz -C /tmp/
    mv /tmp/etcd-v*/etcd /tmp/etcd-v*/etcdctl /usr/local/bin/
    rm -rf /tmp/etcd*

    systemctl daemon-reload
    systemctl enable etcd
    systemctl start etcd
